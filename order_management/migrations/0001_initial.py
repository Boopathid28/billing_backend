# Generated by Django 4.2.4 on 2024-08-20 14:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import order_management.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('books', '0001_initial'),
        ('settings', '0001_initial'),
        ('masters', '0001_initial'),
        ('customer', '0001_initial'),
        ('accounts', '0001_initial'),
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Order Id')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_id_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'order_management_order_id',
                'verbose_name_plural': 'order_management_order_ids',
                'db_table': 'order_management_order_id',
            },
        ),
        migrations.CreateModel(
            name='OrderItemAttachments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=100, verbose_name='Order id')),
                ('order_item', models.CharField(max_length=100, verbose_name='Order Item')),
                ('image', models.FileField(upload_to=order_management.models.content_file_name)),
            ],
            options={
                'verbose_name': 'order_management_order_item_attachement',
                'verbose_name_plural': 'order_management_order_item_attachements',
                'db_table': 'order_management_order_item_attachement',
            },
        ),
        migrations.CreateModel(
            name='SessionOrderId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ses_order_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order_management.orderid', verbose_name='Order Id')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'order_management_session_order_id',
                'verbose_name_plural': 'order_management_session_order_ids',
                'db_table': 'order_management_session_order_id',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Priority Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='priority_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'order_management_priority',
                'verbose_name_plural': 'order_management_priorities',
                'db_table': 'order_management_priority',
            },
        ),
        migrations.CreateModel(
            name='OrderItemDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_weight', models.FloatField(verbose_name='Gross Weight')),
                ('net_weight', models.FloatField(verbose_name='Net Weight')),
                ('metal_rate', models.FloatField(verbose_name='Metal Rate')),
                ('measurement_value', models.CharField(blank=True, max_length=50, null=True, verbose_name='Measurement Value')),
                ('total_stone_weight', models.FloatField(default=0.0, verbose_name='Total Stone Weight')),
                ('total_stone_pieces', models.IntegerField(default=0, verbose_name='Total Stone Pieces')),
                ('total_stone_amount', models.FloatField(default=0.0, verbose_name='Total Stone Amount')),
                ('stone_description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Stone Description')),
                ('total_diamond_weight', models.FloatField(default=0.0, verbose_name='Total Diamond Weight')),
                ('total_diamond_pieces', models.IntegerField(default=0, verbose_name='Total Diamond Pieces')),
                ('total_diamond_amount', models.FloatField(default=0.0, verbose_name='Total Diamond Amount')),
                ('diamond_description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Diamond Description')),
                ('actual_amount', models.FloatField(verbose_name='Actual Amount')),
                ('total_amount', models.FloatField(verbose_name='Total Amount')),
                ('is_assigned', models.BooleanField(default=False, verbose_name='Assigned')),
                ('is_recieved', models.BooleanField(default=False, verbose_name='Recieved')),
                ('is_delivered', models.BooleanField(default=False, verbose_name='Recieved')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered at')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_item_assigned_by', to=settings.AUTH_USER_MODEL, verbose_name='Assigned by')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='settings.gender', verbose_name='Gender Type')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.item', verbose_name='Item')),
                ('measurement_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='product.measurementtype', verbose_name='Measurement Type')),
                ('metal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.metal', verbose_name='Metal')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order_management.orderid', verbose_name='Order Id')),
                ('order_status', models.ForeignKey(default='1', on_delete=django.db.models.deletion.PROTECT, related_name='order_item_order_status', to='settings.statustable', verbose_name='Order Status')),
                ('purity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.purity', verbose_name='Purity')),
                ('sub_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.subitem', verbose_name='Sub Item')),
            ],
            options={
                'verbose_name': 'order_management_order_item',
                'verbose_name_plural': 'order_management_order_items',
                'db_table': 'order_management_order_item',
            },
        ),
        migrations.CreateModel(
            name='OrderIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='Issue Date')),
                ('no_of_days', models.IntegerField(verbose_name='No of Days')),
                ('remainder_date', models.DateField(verbose_name='Remainder Date')),
                ('paid_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='Paid Amount')),
                ('paid_weight', models.FloatField(blank=True, default=0, null=True, verbose_name='Paid Weight')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='Modified at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_issue_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_issue_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order_management.orderid', verbose_name='Order Id')),
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='order_management.orderitemdetails', verbose_name='Order Item')),
                ('payment_status', models.ForeignKey(default='1', on_delete=django.db.models.deletion.PROTECT, related_name='order_item_payment_status', to='settings.paymentstatus', verbose_name='Payment Status')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='books.accountheaddetails', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'order_management_order_issue',
                'verbose_name_plural': 'order_management_order_issues',
                'db_table': 'order_management_order_issue',
            },
        ),
        migrations.CreateModel(
            name='OrderFor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Order For Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_for_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'order_management_order_for',
                'verbose_name_plural': 'order_management_order_fors',
                'db_table': 'order_management_order_for',
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(verbose_name='Order Date')),
                ('no_of_days', models.IntegerField(verbose_name='No of Days')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('customer_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Customer Name')),
                ('total_weight', models.FloatField(verbose_name='Total Weight')),
                ('total_quantity', models.IntegerField(verbose_name='Total Quantity')),
                ('approximate_amount', models.FloatField(verbose_name='Approximate Amount')),
                ('is_order_scheduled', models.BooleanField(default=False, verbose_name='Order scheduled')),
                ('is_issued', models.BooleanField(default=False, verbose_name='Is issued')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='Modified at')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_details_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='customer.customer', verbose_name='Customer')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_details_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('order_for', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order_management.orderfor', verbose_name='Order For')),
                ('order_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order_management.orderid', verbose_name='Order Id')),
                ('order_status', models.ForeignKey(default='1', on_delete=django.db.models.deletion.PROTECT, related_name='order_details_order_status', to='settings.statustable', verbose_name='Order Status')),
                ('payment_status', models.ForeignKey(default='1', on_delete=django.db.models.deletion.PROTECT, related_name='order_details_payment_status', to='settings.paymentstatus', verbose_name='Payment Status')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order_management.priority', verbose_name='Priority')),
            ],
            options={
                'verbose_name': 'order_management_order_detail',
                'verbose_name_plural': 'order_management_order_details',
                'db_table': 'order_management_order_detail',
            },
        ),
    ]
