# Generated by Django 4.2.4 on 2024-08-28 05:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('masters', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
        ('books', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OldGoldLedgerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_ledger_entry_type', models.CharField(max_length=150, unique=True, verbose_name='Old Leger Entry Type')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'old_ledger_type',
                'verbose_name_plural': 'old_ledger_types',
                'db_table': 'old_ledger_type',
            },
        ),
        migrations.CreateModel(
            name='OldGoldLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateTimeField(verbose_name='Entry Date')),
                ('old_ledger_entry_type', models.CharField(max_length=150, verbose_name='Old Leger Entry Type')),
                ('touch', models.FloatField(default=0.0, verbose_name='Touch')),
                ('weight', models.FloatField(default=0.0, verbose_name='Weight')),
                ('refference_number', models.CharField(max_length=150, verbose_name='Refference Number')),
                ('is_cancelled', models.BooleanField(default=False, verbose_name='Cancel Status')),
                ('created_by', models.CharField(max_length=150, verbose_name='Created By')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
                ('metal_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.metal', verbose_name='Metal Details')),
                ('vendor_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='books.accountheaddetails', verbose_name='Vendor Details')),
            ],
            options={
                'verbose_name': 'old_gold_leger',
                'verbose_name_plural': 'old_gold_leger',
                'db_table': 'old_gold_leger',
            },
        ),
        migrations.CreateModel(
            name='MetalEntries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_id', models.CharField(max_length=150, unique=True, verbose_name='Entry ID')),
                ('touch', models.FloatField(default=0.0, verbose_name='Touch')),
                ('weight', models.FloatField(default=0.0, verbose_name='Weight')),
                ('is_cancelled', models.BooleanField(default=False, verbose_name='Cancel Status')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('created_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Created by')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
                ('metal_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.metal', verbose_name='Metal Details')),
            ],
            options={
                'verbose_name': 'metal_entries',
                'verbose_name_plural': 'metal_entries',
                'db_table': 'metal_entries',
            },
        ),
    ]
