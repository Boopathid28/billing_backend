"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import os
import socket
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@51(0_h*k2(p48$n4a$^4+_t#oreb_k$v(8*se!e%+4nlryc^)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = ["13.49.168.229","127.0.0.1","192.168.1.107","192.168.1.212","192.168.1.106","192.168.1.104","192.168.235.208","192.168.1.113","192.168.1.125","192.168.1.108","192.168.1.105","api.thangalakshmi.auss.co","13.48.160.228","192.168.1.109","192.168.1.113","192.168.1.111","192.168.1.115"]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'settings',
    'accounts',
    'organizations',
    'infrastructure',
    'masters',
    'books',
    'product',
    'django_extensions',
    'uuid',
    'tagging',
    'drf_spectacular',
    'billing',
    'value_addition',
    'customer',
    'advance_payment',
    'order_management',
    'approval',
    'stock',
    'purchase',
    'repair_management',
    'billing_backup',
    'dashboard',
    'refinery_management',
    'payment_management',
    'financial_accounting',
    'old_gold_management',
    'suspense_management',
    'vendor_management',
    'old_gold_ledger',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

AUTH_USER_MODEL = 'accounts.User'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


current_hostname = socket.gethostname()

#DESKTOP-R7372JQ - SANTHIYA
if (current_hostname == "DESKTOP-TD2FBV1"):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'sales_new',
            'USER': 'root',
            'PASSWORD': '',
            'HOST':'localhost',
            'PORT':'3306',
            'OPTIONS': {
                'unix_socket': '/opt/lampp/var/mysql/mysql.sock',
            },
            
        }
    }

elif (current_hostname == "DESKTOP-D4S3JRM"):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'ausales_db',
            'USER': 'root',
            'PASSWORD': '1234',
            'HOST':'localhost',
            'PORT':'3306',
            'OPTIONS': {
                'unix_socket': '/opt/lampp/var/mysql/mysql.sock',
            },
            
        }
    }
elif (current_hostname == "AMCTPL220124"):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'sales',
            'USER': 'root',
            'PASSWORD': '',
            'HOST':'localhost',
            'PORT':'3306',
            'OPTIONS': {
                'unix_socket': '/opt/lampp/var/mysql/mysql.sock',
            },
            
        }
    }
elif (current_hostname == "DESKTOP-R7372JQ"):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'ssm_test',
            'USER': 'root',
            'PASSWORD': '',
            'HOST':'localhost',
            'PORT':'3306',
            'ATOMIC_REQUESTS': True,
            'OPTIONS': {
                'unix_socket': '/opt/lampp/var/mysql/mysql.sock',
            },
            
        }
    }
else:
     DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'santhi_swarnamahal',
            'USER': 'root',
            'PASSWORD': 'Dhina#123',
            'HOST':'localhost',
            'PORT':'3306',
            "OPTIONS": {
                "init_command": "SET default_storage_engine=INNODB",
            }
            
        }
    }

#DESKTOP-R7372JQ - SANTHIYA

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE =  'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'ssm_admin'
# Actual directory user files go to
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # media directory in the root directory
MEDIA_URL = '/media/'
 
CORS_ORIGIN_ALLOW_ALL = True

# IMAGE_URL = "http://13.49.168.229:8001"
IMAGE_URL = "http://127.0.0.1:8000"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Only authorized persons can change the maintanance value
UNDER_MAINTANENCE = False

EXPORT_URL = "media/exports/export_data.xlsx"
#Metal Weight Type

GROSSWEIGHT='1'
NETWEIGHT='2'

#Calculation Types

FIXEDRATE='1'
WEIGHTCALCULATION='2'
PERGRAMRATE='3'
PERPIECERATE='4'


PENDING='1'
PARTIAL='2'
COMPLETED='3'
ORDER_ISSUED='4'
ORDER_RECEIVED='5'
ORDER_DELIVERED='6'
CANCELLED = '7'
ESTIMATION_APPROVAL_STATUS = '8'
ESTIMATION_DENIED = '9'
MELTING_ISSUED = '10'
MELTING_RECEIVED = '11'
PURIFICATION_ISSUED = '12'
PURIFICATION_RECEIVED = '13'
APPROVAL_ISSUED = '14'
APPROVAL_RECEIVED = '15'
REPAIR_ISSUED = '16'
REPAIR_RECEIVED = '17'
REPAIR_DELIVERED = '18'
LOT_CONVERTED = '19'
#Stone&Diamond Weight Types

GRAM='1'
CARAT='2'

#Stone&Diamond Rate Type

PERGRAM='1'
PERCARAT='2'
PERPIECE='3'

#Status Table

# LOT_STATUS='1'
# LOT_STATUS_PENDING='1'
# LOT_STATUS_PARTIAL='2'
# LOT_STATUS_COMPLETED='3'

#Stock Type
TAG='1'
NON_TAG='2'
PACKET='3'

#admin_secret

ADMIN_SECRET="9876543210"

#Admin_role

SUPER_ADMIN = 1
ADMIN = 2
BRANCH_ADMIN = 3


#Metal_ID
GOLD = '1'
SILVER = '2'

ORDER_FOR_SHOP = 1
ORDER_FOR_CUSTOMER = 2

USER_CREATION_ADMIN = [SUPER_ADMIN]
USER_CREATION_BRANCH_ADMIN = [SUPER_ADMIN, ADMIN]


ESTIMATION_APPROVAL_TYPE = 1


#Old Gold Type
BILLING_OLD_GOLD = 1
ORDER_OLD_GOLD = 2
REPAIR_OLD_GOLD = 3
 
#Transfer Creation Type:
BAG_TRANSFER = 1
LOT_TRNAFER = 2
 
#Payment Status
PAYMENT_PENDING = 1
PARTIALLY_PAID = 2
PAID = 3
 
#PAYMENT MODULE DEFINE
ORDER_PAYMENT = 1
REPAIR_PAYMENT = 2
BILLING_PAYMENT = 3
VENDOR_PAYMENT = 4

 
NEW_PURCHASE = 1
OLD_PURCHASE = 2


#Customer Group
SHOP=2

# PRINT MODULES
ESTIMATION = 1
BILLING = 2
ORDER = 3
REPAIR = 4

#GST TYPE
INTRA_STATE_GST = 1
INTER_STATE_GST = 2


#PAYMENT METHOD
CASH = 1
UPI = 2
CARD = 3
BANK = 4
SCHEME = 5

# VENDOR PAYMENT
NEWPURCHASE_VENDOR_PAYMENT = 1
REPAIR_VENDOR_PAYMENT = 2
ORDER_VENDOR_PAYMENT = 3


#SALE RETURN TYPE
AUTOMATIC = 1
MANUAL = 2

#ENTRY TYPE
REGULAR_ENTRY = 1
ORDER_ENTRY = 2
REPAIR_ENTRY = 3
SALE_RETURN = 4


#Customer Sales Ledger Entry type
SALES_ENTRY = 1
REPAIR_ENTRY_CUSTOMER_LEDGER = 2
ADVANCE_ENTRY = 3
SUSPENSE_ENTRY = 4
OLD_PURCHASE_ENTRY = 5
SUSPENSE_REPAYMENT_ENTRY = 6

#Transaction Type Entry
CREDIT_ENTRY = 1
DEBIT_ENTRY = 2

#STOCK LEDGER TYPE
IN = 1
OUT = 2

#Vendor Ledger Type
PURCHASE_VENDOR_LEDGER = 1
ORDER_VENDOR_LEDGER = 2
REPAIR_VENDOR_LEDGER = 3
MELTING_VENDOR_LEDGER = 4
PURIFICATION_VENDOR_LEDGER = 5
DISCOUNT_VENDOR_LEDGER = 6
PAYMENT_VENDOR_LEDGER = 7

#OLD LEDGER ENTRY TYPE
OLD_IN = 1
OLD_OUT = 2