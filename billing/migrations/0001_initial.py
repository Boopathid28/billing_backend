# Generated by Django 4.2.4 on 2024-08-20 14:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('old_gold_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('advance_payment', '0001_initial'),
        ('organizations', '0001_initial'),
        ('tagging', '0001_initial'),
        ('settings', '0001_initial'),
        ('masters', '0001_initial'),
        ('customer', '0001_initial'),
        ('accounts', '0001_initial'),
        ('payment_management', '0001_initial'),
        ('product', '0001_initial'),
        ('suspense_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_id', models.CharField(max_length=50, unique=True, verbose_name='Bill Id')),
            ],
            options={
                'verbose_name': 'bill_id',
                'verbose_name_plural': 'bill_id',
                'db_table': 'bill_id',
            },
        ),
        migrations.CreateModel(
            name='BillingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_id', models.CharField(max_length=150, unique=True, verbose_name='Bill ID')),
                ('bill_date', models.DateTimeField(verbose_name='Bill Date')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Total Amount')),
                ('gst_amount', models.FloatField(default=0.0, verbose_name='GST Amount')),
                ('discount_amount', models.FloatField(default=0.0, verbose_name='Discount Amount')),
                ('roundoff_amount', models.FloatField(default=0.0, verbose_name='Roundoff Amount')),
                ('payable_amount', models.FloatField(default=0.0, verbose_name='Payable Amount')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('created_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Created by')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
                ('customer_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customer.customer', verbose_name='Customer Details')),
                ('gst_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='masters.gsttype', verbose_name='Gst Type')),
            ],
            options={
                'verbose_name': 'billing_details',
                'verbose_name_plural': 'billing_details',
                'db_table': 'billing_details',
            },
        ),
        migrations.CreateModel(
            name='BillingParticularDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(default=0.0, verbose_name='Rate')),
                ('pieces', models.IntegerField(default=0, verbose_name='Pieces')),
                ('gross_weight', models.FloatField(default=0.0, verbose_name='Gross Weight')),
                ('reduce_weight', models.FloatField(default=0.0, verbose_name='Reduce Weight')),
                ('net_weight', models.FloatField(default=0.0, verbose_name='Net Weight')),
                ('wastage_percent', models.FloatField(default=0.0, verbose_name='Wastage Percent')),
                ('flat_wastage', models.FloatField(default=0.0, verbose_name='Flat Wastage')),
                ('making_charge_per_gram', models.FloatField(default=0.0, verbose_name='Making Charge Per Gram')),
                ('flat_making_charge', models.FloatField(default=0.0, verbose_name='Flat Making Charge')),
                ('stone_amount', models.FloatField(default=0.0, verbose_name='Stone Amount')),
                ('diamond_amount', models.FloatField(default=0.0, verbose_name='Diamond Amount')),
                ('huid_amount', models.FloatField(default=0.0, verbose_name='Huid Amount')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Total Amount')),
                ('gst_percent', models.FloatField(default=0.0, verbose_name='Gst Percent')),
                ('gst_amount', models.FloatField(default=0.0, verbose_name='Gst Amount')),
                ('payable_amount', models.FloatField(default=0.0, verbose_name='Payable Amount')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingdetails', verbose_name='Billing Details')),
                ('tag_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.taggeditems', verbose_name='Tag Details')),
            ],
            options={
                'verbose_name': 'billing_particulars',
                'verbose_name_plural': 'billing_particulars',
                'db_table': 'billing_particulars',
            },
        ),
        migrations.CreateModel(
            name='BillingPaymentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=150, unique=True, verbose_name='Payment ID')),
                ('payment_date', models.DateTimeField(verbose_name='Payment Date')),
                ('created_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Created by')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingdetails', verbose_name='Billing Details')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
            ],
            options={
                'verbose_name': 'billing_payment_details',
                'verbose_name_plural': 'billing_payment_details',
                'db_table': 'billing_payment_details',
            },
        ),
        migrations.CreateModel(
            name='BillingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_type', models.CharField(max_length=50, unique=True, verbose_name='Bill Type')),
            ],
            options={
                'verbose_name': 'bill_type',
                'verbose_name_plural': 'bill_types',
                'db_table': 'bill_type',
            },
        ),
        migrations.CreateModel(
            name='EstimateDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate_no', models.CharField(max_length=100, unique=True, verbose_name='Estimate Number')),
                ('estimation_date', models.DateTimeField(verbose_name='Estimation Date')),
                ('total_amount', models.FloatField(default=0.0, max_length=100, verbose_name='Total Amount')),
                ('discount_percentage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Discount Percentage')),
                ('discount_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Discount Amount')),
                ('stone_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Stone Amount')),
                ('diamond_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Diamond Amount')),
                ('chit_amount', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Chit Amount')),
                ('salereturn_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Salereturn Amount')),
                ('exchange_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Exchange Amount')),
                ('gst_percentage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='GST Percentage')),
                ('gst_amount', models.FloatField(default=0.0, max_length=50, verbose_name='GST Amount')),
                ('payable_amount', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Payable Amount')),
                ('advance_amount', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Advance Amount')),
                ('balance_amount', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Balance Amount')),
                ('is_billed', models.BooleanField(default=False, verbose_name='Is Billed')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='Modified At')),
                ('bill_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='billing.billingtype', verbose_name='Bill Type')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='estimation_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('customer_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customer.customer', verbose_name='Customer Details')),
                ('gst_type', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='masters.gsttype', verbose_name='GST Type')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='estimation_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'estimation_detail',
                'verbose_name_plural': 'estimation_details',
                'db_table': 'estimation_detail',
            },
        ),
        migrations.CreateModel(
            name='GoldEstimationID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gold_estimation_id', models.CharField(max_length=10, unique=True, verbose_name='Gold Estimation Id')),
            ],
            options={
                'verbose_name': 'gold_estimation_id',
                'verbose_name_plural': 'gold_estimation_id',
                'db_table': 'gold_estimation_id',
            },
        ),
        migrations.CreateModel(
            name='MiscIssueDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='Issue Date')),
                ('giver_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Giver Name')),
                ('remarks', models.CharField(blank=True, max_length=500, null=True, verbose_name='Remarks')),
                ('total_gross_weight', models.FloatField(default=0.0, verbose_name='Total Gross Weight')),
                ('total_net_weight', models.FloatField(default=0.0, verbose_name='Total Net Weight')),
                ('total_pieces', models.IntegerField(default=0, verbose_name='Total Pieces')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Total Amount')),
                ('bill_amount', models.FloatField(default=0.0, verbose_name='Bill Amount')),
                ('net_amount', models.FloatField(default=0.0, verbose_name='Net Amount')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='misc_issue_details_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customer.customer', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'billing_misc_issue_detail',
                'verbose_name_plural': 'billing_misc_issue_details',
                'db_table': 'billing_misc_issue_detail',
            },
        ),
        migrations.CreateModel(
            name='MiscIssueId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('misc_issue_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Misc Id')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='misc_issue_id_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'billing_misc_issue_id',
                'verbose_name_plural': 'billing_misc_issue_ids',
                'db_table': 'billing_misc_issue_id',
            },
        ),
        migrations.CreateModel(
            name='SilverBillID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('silver_bill_id', models.CharField(max_length=10, unique=True, verbose_name='Silver Bill Id')),
            ],
            options={
                'verbose_name': 'silver_bill_id',
                'verbose_name_plural': 'silver_bill_id',
                'db_table': 'silver_bill_id',
            },
        ),
        migrations.CreateModel(
            name='SilverEstimationID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('silver_estimation_id', models.CharField(max_length=10, unique=True, verbose_name='Silver Estimation Id')),
            ],
            options={
                'verbose_name': 'silver_estimation_id',
                'verbose_name_plural': 'silver_estimation_id',
                'db_table': 'silver_estimation_id',
            },
        ),
        migrations.CreateModel(
            name='SilverEstimationNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('silver_estimation_number', models.CharField(max_length=10, unique=True, verbose_name='Silver Estimation Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'silver_estimation_number',
                'verbose_name_plural': 'silver_estimation_numbers',
                'db_table': 'silver_estimation_number',
            },
        ),
        migrations.CreateModel(
            name='SilverBillNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('silver_bill_number', models.CharField(max_length=10, unique=True, verbose_name='Silver Bill Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'silver_bill_number',
                'verbose_name_plural': 'silver_bill_numbers',
                'db_table': 'silver_bill_number',
            },
        ),
        migrations.CreateModel(
            name='SessionMiscIssueId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ses_misc_issue_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='billing.miscissueid', verbose_name='Misc Id')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'billing_session_misc_issue_id',
                'verbose_name_plural': 'billing_session_misc_issue_ids',
                'db_table': 'billing_session_misc_issue_id',
            },
        ),
        migrations.CreateModel(
            name='MiscParticulars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pieces', models.IntegerField(default=0, verbose_name='Pieces')),
                ('metal_rate', models.FloatField(default=0.0, verbose_name='Metal Rate')),
                ('amount', models.FloatField(default=0.0, verbose_name='Amount')),
                ('misc_issue_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.miscissuedetails', verbose_name='Misc Issue')),
                ('tag_number', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.taggeditems', verbose_name='Tag Number')),
            ],
            options={
                'verbose_name': 'billing_misc_particular',
                'verbose_name_plural': 'billing_misc_particulars',
                'db_table': 'billing_misc_particular',
            },
        ),
        migrations.AddField(
            model_name='miscissuedetails',
            name='misc_issue_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='billing.miscissueid', verbose_name='Misc Id'),
        ),
        migrations.CreateModel(
            name='GoldEstimationNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gold_estimation_number', models.CharField(max_length=10, unique=True, verbose_name='Gold Estimation Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'gold_estimation_number',
                'verbose_name_plural': 'gold_estimation_numbers',
                'db_table': 'gold_estimation_number',
            },
        ),
        migrations.CreateModel(
            name='EstimationTagItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Tag Number')),
                ('net_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Net weight')),
                ('gross_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Gross Weight')),
                ('tag_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('cover_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('loop_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('other_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('pieces', models.IntegerField(blank=True, null=True, verbose_name='Pieces')),
                ('total_pieces', models.IntegerField(blank=True, default=0.0, null=True, verbose_name='Total Pieces')),
                ('rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Estimation Metal Rate')),
                ('stone_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Stone Rate')),
                ('huid_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Huid Rate')),
                ('diamond_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Diamond Rate')),
                ('wastage_percentage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Wastage Percent')),
                ('flat_wastage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Flat Wastage')),
                ('making_charge', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Making Charger Per Gram')),
                ('flat_making_charge', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Flat Making Charger')),
                ('tax_percent', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tax Percent')),
                ('additional_charges', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Additional Charges')),
                ('total_stone_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Total Stone Weight')),
                ('total_diamond_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tax Diamond Weight')),
                ('gst', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='GST')),
                ('total_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Total Rate')),
                ('without_gst_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Without Gst Rate')),
                ('calculation_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.calculationtype', verbose_name='Calculation Type')),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organizations.staff', verbose_name='Employee Id')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimation Details')),
                ('estimation_tag_item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tagging.taggeditems', verbose_name='Estimation Tag Items')),
                ('item_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.item', verbose_name='Item Details')),
                ('making_charge_calculation_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Making_charge_calculation', to='product.weighttype', verbose_name='Making Charge Calculation Type')),
                ('metal', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='masters.metal', verbose_name='Metal')),
                ('per_gram_weight_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='per_gram_weight_type', to='product.weighttype', verbose_name='Per gram weight type')),
                ('stock_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.stocktype', verbose_name='Stock Type')),
                ('sub_item_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.subitem', verbose_name='SubItem Details')),
                ('wastage_calculation_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Wastage_calculation', to='product.weighttype', verbose_name='Wastage Calculation Type')),
            ],
            options={
                'verbose_name': 'estimation_tag_value',
                'verbose_name_plural': 'estimation_tag_values',
                'db_table': 'estimation_tag_value',
            },
        ),
        migrations.CreateModel(
            name='EstimationStoneDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stone_pieces', models.IntegerField(blank=True, null=True, verbose_name='Stone Pieces')),
                ('stone_weight', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Stone Weight')),
                ('stone_rate', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Stone Rate')),
                ('include_stone_weight', models.BooleanField(default=True, verbose_name='Include Stone Weight')),
                ('total_stone_value', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Total Stone Value')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimate Details')),
                ('estimation_item_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimationtagitems', verbose_name='Estimation Item Details')),
                ('stone_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Stone Name')),
                ('stone_rate_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.ratetype', verbose_name='Rate Type')),
                ('stone_weight_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.stoneweighttype', verbose_name='Weight Type')),
            ],
            options={
                'verbose_name': 'estimation_item_stone',
                'verbose_name_plural': 'estimation_item_stones',
                'db_table': 'estimation_item_stone',
            },
        ),
        migrations.CreateModel(
            name='EstimationSaleReturnItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.IntegerField(blank=True, null=True, verbose_name='Tag Number')),
                ('net_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Net weight')),
                ('gross_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Gross Weight')),
                ('tag_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('cover_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('loop_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('other_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('pieces', models.IntegerField(blank=True, null=True, verbose_name='Pieces')),
                ('total_pieces', models.IntegerField(blank=True, default=0.0, null=True, verbose_name='Total Pieces')),
                ('rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Estimation Metal Rate')),
                ('stone_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Stone Rate')),
                ('diamond_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Diamond Rate')),
                ('wastage_percentage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Wastage Percent')),
                ('flat_wastage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Flat Wastage')),
                ('making_charge', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Making Charger Per Gram')),
                ('flat_making_charge', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Flat Making Charger')),
                ('tax_percent', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tax Percent')),
                ('additional_charges', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Additional Charges')),
                ('total_stone_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Total Stone Weight')),
                ('total_diamond_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tax Diamond Weight')),
                ('gst', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='GST')),
                ('total_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Total Rate')),
                ('without_gst_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Without Gst Rate')),
                ('huid_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Huid Rate')),
                ('bill_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.billingdetails', verbose_name='Bill Details')),
                ('calculation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.calculationtype', verbose_name='Calculation Type')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimation Details')),
                ('item_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.item', verbose_name='Item Details')),
                ('making_charge_calculation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='estimation_return_Making_charge_calculation', to='product.weighttype', verbose_name='Making Charge Calculation Type')),
                ('metal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.metal', verbose_name='Metal')),
                ('per_gram_weight_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='estimation_return_per_gram_weight_type', to='product.weighttype', verbose_name='Per gram weight type')),
                ('return_items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.billingparticulardetails', verbose_name='Return Items')),
                ('stock_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.stocktype', verbose_name='Stock Type')),
                ('sub_item_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.subitem', verbose_name='SubItem Details')),
                ('wastage_calculation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='estimation_return_Wastage_calculation', to='product.weighttype', verbose_name='Wastage Calculation Type')),
            ],
            options={
                'verbose_name': 'estimation_sale_return',
                'verbose_name_plural': 'estimation_sale_returns',
                'db_table': 'estimation_sale_return',
            },
        ),
        migrations.CreateModel(
            name='EstimationReturnStoneDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stone_pieces', models.IntegerField(blank=True, null=True, verbose_name='Stone Pieces')),
                ('stone_weight', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Stone Weight')),
                ('stone_rate', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Stone Rate')),
                ('include_stone_weight', models.BooleanField(default=True, verbose_name='Include Stone Weight')),
                ('total_stone_value', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Total Stone Value')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimation Details')),
                ('estimation_return_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimationsalereturnitems', verbose_name='Estimation Return Item')),
                ('stone_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Stone Name')),
                ('stone_rate_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.ratetype', verbose_name='Rate Type')),
                ('stone_weight_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.stoneweighttype', verbose_name='Weight Type')),
            ],
            options={
                'verbose_name': 'estimation_return_stone',
                'verbose_name_plural': 'estimation_return_stones',
                'db_table': 'estimation_return_stone',
            },
        ),
        migrations.CreateModel(
            name='EstimationReturnDiamondDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diamond_pieces', models.IntegerField(blank=True, null=True, verbose_name='Diamond Pieces')),
                ('diamond_weight', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Diamond Weight')),
                ('diamond_rate', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Diamond Rate')),
                ('include_diamond_weight', models.BooleanField(default=True, verbose_name='Include Diamond Weight')),
                ('total_diamond_value', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Total Diamond Value')),
                ('diamond_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Diamond Name')),
                ('diamond_rate_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.ratetype', verbose_name='Rate Type')),
                ('diamond_weight_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.stoneweighttype', verbose_name='Weight Type')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimation Details')),
                ('estimation_return_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimationsalereturnitems', verbose_name='Estimation Return Item')),
            ],
            options={
                'verbose_name': 'estimation_return_diamond',
                'verbose_name_plural': 'estimation_return_diamonds',
                'db_table': 'estimation_return_diamond',
            },
        ),
        migrations.CreateModel(
            name='EstimationOldPurchaseDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimation Details')),
                ('old_purchase_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='old_gold_management.oldgoldbilldetails', verbose_name='Old Purchase Details')),
            ],
            options={
                'verbose_name': 'estimation_old_purchase_details',
                'verbose_name_plural': 'estimation_old_purchase_details',
                'db_table': 'estimation_old_purchase_details',
            },
        ),
        migrations.CreateModel(
            name='EstimationOldGold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Item Name')),
                ('old_gold_no', models.CharField(max_length=100, verbose_name='Oldgold Number')),
                ('metal_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='metal Rate')),
                ('today_metal_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Today Metal Rate')),
                ('old_gross_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Old Gross Weight')),
                ('old_net_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Old Net Weight')),
                ('dust_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Dust Weight')),
                ('old_metal_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Old Metal Rate')),
                ('total_old_gold_value', models.FloatField(blank=True, default=0.0, max_length=100, null=True, verbose_name='Total Old Gold Value')),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organizations.staff', verbose_name='Employee Id')),
                ('estimation_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimation Details')),
                ('old_metal', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='masters.metal', verbose_name='Old Metal')),
                ('purity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='masters.purity', verbose_name='oldgold_purity')),
            ],
            options={
                'verbose_name': 'estimation_old_gold_value',
                'verbose_name_plural': 'estimation_old_gold_values',
                'db_table': 'estimation_old_gold_value',
            },
        ),
        migrations.CreateModel(
            name='EstimationDiamondDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diamond_pieces', models.IntegerField(blank=True, null=True, verbose_name='Diamond Pieces')),
                ('diamond_weight', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Diamond Weight')),
                ('diamond_rate', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Diamond Rate')),
                ('include_diamond_weight', models.BooleanField(default=True, verbose_name='Include Diamond Weight')),
                ('total_diamond_value', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Total Diamond Value')),
                ('diamond_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Diamond Name')),
                ('diamond_rate_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.ratetype', verbose_name='Rate Type')),
                ('diamond_weight_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.stoneweighttype', verbose_name='Weight Type')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimate Details')),
                ('estimation_item_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimationtagitems', verbose_name='Estimation Item Details')),
            ],
            options={
                'verbose_name': 'estimation_item_diamond',
                'verbose_name_plural': 'estimation_item_diamonds',
                'db_table': 'estimation_item_diamond',
            },
        ),
        migrations.CreateModel(
            name='EstimationApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Approved by')),
                ('estimation_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimation Details')),
                ('estimation_status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='settings.statustable', verbose_name='Estimation Status')),
            ],
            options={
                'verbose_name': 'estimation_approval',
                'verbose_name_plural': 'estimation_approvals',
                'db_table': 'estimation_approval',
            },
        ),
        migrations.CreateModel(
            name='EstimationAdvanceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('redeem_weight', models.FloatField(default=0.0, verbose_name='Redeem Weight')),
                ('redeem_metal_rate', models.FloatField(default=0.0, verbose_name='Redeem Metal Rate')),
                ('redeem_metal_value', models.FloatField(default=0.0, verbose_name='Redeem Metal Value')),
                ('redeem_amount', models.FloatField(default=0.0, verbose_name='Redeem Amount')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Total Amount')),
                ('advance_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='advance_payment.advancedetails', verbose_name='Advance Details')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.estimatedetails', verbose_name='Estimation Details')),
            ],
            options={
                'verbose_name': 'estimation_advance_details',
                'verbose_name_plural': 'estimation_advance_details',
                'db_table': 'estimation_advance_details',
            },
        ),
        migrations.CreateModel(
            name='BillPaymentDenominationDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_amount', models.FloatField(default=0.0, verbose_name='Paid Amount')),
                ('remark', models.CharField(blank=True, max_length=150, null=True, verbose_name='Remark')),
                ('payment_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingpaymentdetails', verbose_name='Bill Payment Details')),
                ('payment_method', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='payment_management.paymentmenthod', verbose_name='Payment Method')),
                ('payment_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='payment_management.paymentproviders', verbose_name='Payment Provider')),
            ],
            options={
                'verbose_name': 'billing_payment_denominations',
                'verbose_name_plural': 'billing_payment_denominations',
                'db_table': 'billing_payment_denominations',
            },
        ),
        migrations.CreateModel(
            name='BillNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_number', models.CharField(max_length=10, unique=True, verbose_name=' Bill Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'bill_number',
                'verbose_name_plural': 'bill_numbers',
                'db_table': 'bill_number',
            },
        ),
        migrations.CreateModel(
            name='BillingSuspenseDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingpaymentdetails', verbose_name='Bill Payment Details')),
                ('suspense_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='suspense_management.suspensedetails', verbose_name='Suspense_details')),
            ],
            options={
                'verbose_name': 'billing_suspense_details',
                'verbose_name_plural': 'billing_suspense_details',
                'db_table': 'billing_suspense_details',
            },
        ),
        migrations.CreateModel(
            name='BillingSaleReturnItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Tag Number')),
                ('net_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Net weight')),
                ('gross_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Gross Weight')),
                ('tag_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('cover_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('loop_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('other_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('pieces', models.IntegerField(blank=True, null=True, verbose_name='Pieces')),
                ('total_pieces', models.IntegerField(blank=True, default=0.0, null=True, verbose_name='Total Pieces')),
                ('rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Estimation Metal Rate')),
                ('stone_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Stone Rate')),
                ('diamond_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Diamond Rate')),
                ('wastage_percentage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Wastage Percent')),
                ('flat_wastage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Flat Wastage')),
                ('making_charge', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Making Charger Per Gram')),
                ('flat_making_charge', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Flat Making Charger')),
                ('tax_percent', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tax Percent')),
                ('additional_charges', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Additional Charges')),
                ('total_stone_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Total Stone Weight')),
                ('total_diamond_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tax Diamond Weight')),
                ('gst', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='GST')),
                ('total_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Total Rate')),
                ('without_gst_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Without Gst Rate')),
                ('huid_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Huid Rate')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_bill_details', to='billing.billingdetails', verbose_name='Estimation Details')),
                ('calculation_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.calculationtype', verbose_name='Calculation Type')),
                ('item_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.item', verbose_name='Item Details')),
                ('making_charge_calculation_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='billing_return_Making_charge_calculation', to='product.weighttype', verbose_name='Making Charge Calculation Type')),
                ('metal', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='masters.metal', verbose_name='Metal')),
                ('per_gram_weight_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='billing_return_per_gram_weight_type', to='product.weighttype', verbose_name='Per gram weight type')),
                ('return_bill_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='old_bill_details', to='billing.billingdetails', verbose_name='Bill Details')),
                ('return_items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingparticulardetails', verbose_name='Return Items')),
                ('stock_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.stocktype', verbose_name='Stock Type')),
                ('sub_item_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.subitem', verbose_name='SubItem Details')),
                ('wastage_calculation_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='billing_return_Wastage_calculation', to='product.weighttype', verbose_name='Wastage Calculation Type')),
            ],
            options={
                'verbose_name': 'billing_sale_return',
                'verbose_name_plural': 'billing_sale_returns',
                'db_table': 'billing_sale_return',
            },
        ),
        migrations.CreateModel(
            name='BillingReturnStoneDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stone_pieces', models.IntegerField(blank=True, null=True, verbose_name='Stone Pieces')),
                ('stone_weight', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Stone Weight')),
                ('stone_rate', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Stone Rate')),
                ('include_stone_weight', models.BooleanField(default=True, verbose_name='Include Stone Weight')),
                ('total_stone_value', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Total Stone Value')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingdetails', verbose_name='Estimation Details')),
                ('billing_return_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingsalereturnitems', verbose_name='Estimation Return Item')),
                ('stone_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Stone Name')),
                ('stone_rate_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.ratetype', verbose_name='Rate Type')),
                ('stone_weight_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.stoneweighttype', verbose_name='Weight Type')),
            ],
            options={
                'verbose_name': 'billing_return_stone',
                'verbose_name_plural': 'billing_return_stones',
                'db_table': 'billing_return_stone',
            },
        ),
        migrations.CreateModel(
            name='BillingReturnDiamondDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diamond_pieces', models.IntegerField(blank=True, null=True, verbose_name='Diamond Pieces')),
                ('diamond_weight', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Diamond Weight')),
                ('diamond_rate', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Diamond Rate')),
                ('include_diamond_weight', models.BooleanField(default=True, verbose_name='Include Diamond Weight')),
                ('total_diamond_value', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Total Diamond Value')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingdetails', verbose_name='Estimation Details')),
                ('billing_return_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingsalereturnitems', verbose_name='Estimation Return Item')),
                ('diamond_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Diamond Name')),
                ('diamond_rate_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.ratetype', verbose_name='Rate Type')),
                ('diamond_weight_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.stoneweighttype', verbose_name='Weight Type')),
            ],
            options={
                'verbose_name': 'billing_return_diamond',
                'verbose_name_plural': 'billing_return_diamonds',
                'db_table': 'billing_return_diamond',
            },
        ),
        migrations.CreateModel(
            name='BillingParticularStoneDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reduce_weight', models.BooleanField(default=True, verbose_name='Reduce Weight')),
                ('stone_pieces', models.IntegerField(default=0, verbose_name='Stone Pieces')),
                ('stone_weight', models.FloatField(default=0.0, verbose_name='Stone Weight')),
                ('stone_amount', models.FloatField(default=0.0, verbose_name='Stone Amount')),
                ('billing_particular_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingparticulardetails', verbose_name='Billing Particular Details')),
                ('stone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Stone Details')),
            ],
            options={
                'verbose_name': 'billing_particulars_stone',
                'verbose_name_plural': 'billing_particulars_stone',
                'db_table': 'billing_particulars_stone',
            },
        ),
        migrations.CreateModel(
            name='BillingParticularsDiamondDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reduce_weight', models.BooleanField(default=True, verbose_name='Reduce Weight')),
                ('diamond_pieces', models.IntegerField(default=0, verbose_name='Diamond Pieces')),
                ('diamond_weight', models.FloatField(default=0.0, verbose_name='Diamond Weight')),
                ('diamond_amount', models.FloatField(default=0.0, verbose_name='Diamond Amount')),
                ('billing_particular_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingparticulardetails', verbose_name='Billing Particular Details')),
                ('diamond', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Diamond Details')),
            ],
            options={
                'verbose_name': 'billing_particulars_diamond',
                'verbose_name_plural': 'billing_particulars_diamond',
                'db_table': 'billing_particulars_diamond',
            },
        ),
        migrations.CreateModel(
            name='BillingExchangeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_purchase_details', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='old_gold_management.oldgoldbilldetails', verbose_name='Old Purchase Details')),
                ('payment_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingpaymentdetails', verbose_name='Bill Payment Details')),
            ],
            options={
                'verbose_name': 'billing_exchange_details',
                'verbose_name_plural': 'billing_exchange_details',
                'db_table': 'billing_exchange_details',
            },
        ),
        migrations.CreateModel(
            name='BillingEstimationDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingdetails', verbose_name='Billing Details')),
                ('estimation_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='billing.estimatedetails', verbose_name='Estimation Details')),
            ],
            options={
                'verbose_name': 'billing_estimation_details',
                'verbose_name_plural': 'billing_estimation_details',
                'db_table': 'billing_estimation_details',
            },
        ),
        migrations.CreateModel(
            name='BillingChitDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_account_number', models.CharField(max_length=150, verbose_name='Scheme Account Number')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Total Amount')),
                ('payment_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingpaymentdetails', verbose_name='Bill Payment Details')),
            ],
            options={
                'verbose_name': 'billing_chit_details',
                'verbose_name_plural': 'billing_chit_details',
                'db_table': 'billing_chit_details',
            },
        ),
        migrations.CreateModel(
            name='BillingAdvanceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('redeem_weight', models.FloatField(default=0.0, verbose_name='Redeem Weight')),
                ('redeem_metal_rate', models.FloatField(default=0.0, verbose_name='Redeem Metal Rate')),
                ('redeem_metal_value', models.FloatField(default=0.0, verbose_name='Redeem Metal Value')),
                ('redeem_amount', models.FloatField(default=0.0, verbose_name='Redeem Amount')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Total Amount')),
                ('advance_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='advance_payment.advancedetails', verbose_name='Advance Details')),
                ('payment_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingpaymentdetails', verbose_name='Bill Payment Details')),
            ],
            options={
                'verbose_name': 'billing_advance_details',
                'verbose_name_plural': 'billing_advance_details',
                'db_table': 'billing_advance_details',
            },
        ),
    ]
