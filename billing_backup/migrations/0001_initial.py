# Generated by Django 4.2.4 on 2024-08-20 14:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tagging', '0001_initial'),
        ('masters', '0001_initial'),
        ('customer', '0001_initial'),
        ('accounts', '0001_initial'),
        ('product', '0001_initial'),
        ('billing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupBillID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backupbill_id', models.CharField(max_length=50, unique=True, verbose_name='Backup Bill Id')),
            ],
            options={
                'verbose_name': 'backup_bill_id',
                'verbose_name_plural': 'backup_bill_id',
                'db_table': 'backup_bill_id',
            },
        ),
        migrations.CreateModel(
            name='BackupBillSilverBillID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backupbill_id', models.CharField(max_length=50, unique=True, verbose_name='Backup Bill Id')),
            ],
            options={
                'verbose_name': 'backup_bill_silver_id',
                'verbose_name_plural': 'backup_bill_silver_id',
                'db_table': 'backup_bill_silver_id',
            },
        ),
        migrations.CreateModel(
            name='BillingBackupDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Bill Number')),
                ('bill_date', models.DateTimeField(blank=True, null=True, verbose_name='Bill Date')),
                ('customer_mobile', models.CharField(max_length=10, null=True, verbose_name='Customer Mobile')),
                ('total_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Total Amount')),
                ('gst_amount', models.FloatField(default=0.0, max_length=50, verbose_name='GST Amount')),
                ('advance_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Advance Amount')),
                ('discount_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Discount Amount')),
                ('exchange_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Exchange Amount')),
                ('chit_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Chit Amount')),
                ('payable_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Payable Amount')),
                ('cash_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Cash amount')),
                ('card_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Card amount')),
                ('account_transfer_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Account transfer amount')),
                ('upi_amount', models.FloatField(default=0.0, max_length=50, verbose_name='UPI amount')),
                ('paid_amount', models.FloatField(default=0.0, max_length=50, verbose_name='Paid Amount')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='Modified At')),
                ('bill_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='billing.billingtype', verbose_name='Bill Type')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='billingbackup_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('customer_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customer.customer', verbose_name='Customer Details')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='billingbackup_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
            ],
            options={
                'verbose_name': 'billing_backup_detail',
                'verbose_name_plural': 'billing_backup_details',
                'db_table': 'billing_backup_detail',
            },
        ),
        migrations.CreateModel(
            name='BillingBackupTagItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Tag Number')),
                ('net_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Net weight')),
                ('gross_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Gross Weight')),
                ('tag_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('cover_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('loop_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('other_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tag Weight')),
                ('pieces', models.IntegerField(blank=True, null=True, verbose_name='Pieces')),
                ('total_pieces', models.IntegerField(blank=True, default=0.0, null=True, verbose_name='Total Pieces')),
                ('rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Estimation Metal Rate')),
                ('stone_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Stone Rate')),
                ('diamond_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Diamond Rate')),
                ('wastage_percentage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Wastage Percent')),
                ('flat_wastage', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Flat Wastage')),
                ('making_charge', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Making Charger Per Gram')),
                ('huid_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Huid Rate')),
                ('flat_making_charge', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Flat Making Charger')),
                ('tax_percent', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tax Percent')),
                ('additional_charges', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Additional Charges')),
                ('total_stone_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Total Stone Weight')),
                ('total_diamond_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Tax Diamond Weight')),
                ('gst', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='GST')),
                ('total_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Total Rate')),
                ('without_gst_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Without Gst Rate')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing_backup.billingbackupdetails', verbose_name='Billing Details')),
                ('billing_tag_item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tagging.taggeditems', verbose_name='Billing Tag Items')),
                ('calculation_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.calculationtype', verbose_name='Calculation Type')),
                ('item_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.item', verbose_name='Item Details')),
                ('making_charge_calculation_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='billingbackup_making_charge_calculation', to='product.weighttype', verbose_name='Making Charge Calculation Type')),
                ('metal', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='masters.metal', verbose_name='Metal')),
                ('per_gram_weight_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='billingbackup_per_gram_weight_type', to='product.weighttype', verbose_name='Per gram weight type')),
                ('stock_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.stocktype', verbose_name='Stock Type')),
                ('sub_item_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='product.subitem', verbose_name='SubItem Details')),
                ('wastage_calculation_type', models.ForeignKey(blank=True, default=0.0, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='billingbackup_Wastage_calculation', to='product.weighttype', verbose_name='Wastage Calculation Type')),
            ],
            options={
                'verbose_name': 'billing_backup_tagitem',
                'verbose_name_plural': 'billing_backup_tagitems',
                'db_table': 'billing_backup_tagitem',
            },
        ),
        migrations.CreateModel(
            name='BillingBackupStoneDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stone_pieces', models.IntegerField(blank=True, null=True, verbose_name='Stone Pieces')),
                ('stone_weight', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Stone Weight')),
                ('stone_rate', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Stone Rate')),
                ('include_stone_weight', models.BooleanField(default=True, verbose_name='Include Stone Weight')),
                ('total_stone_value', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Total Stone Value')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing_backup.billingbackupdetails', verbose_name='Billing Details')),
                ('billing_item_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing_backup.billingbackuptagitems', verbose_name='Billing Item Details')),
                ('stone_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Stone Name')),
                ('stone_rate_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.ratetype', verbose_name='Rate Type')),
                ('stone_weight_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.stoneweighttype', verbose_name='Weight Type')),
            ],
            options={
                'verbose_name': 'billing_backup_stone_detail',
                'verbose_name_plural': 'billing_backup_stone_details',
                'db_table': 'billing_backup_stone_detail',
            },
        ),
        migrations.CreateModel(
            name='BillingBackupOldGold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Item Name')),
                ('old_gold_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Oldgold Number')),
                ('metal_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='metal Rate')),
                ('today_metal_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Today Metal Rate')),
                ('old_gross_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Old Gross Weight')),
                ('old_net_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Old Net Weight')),
                ('dust_weight', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Dust Weight')),
                ('old_metal_rate', models.FloatField(blank=True, default=0.0, max_length=50, null=True, verbose_name='Old Metal Rate')),
                ('total_old_gold_value', models.FloatField(blank=True, default=0.0, max_length=100, null=True, verbose_name='Total Old Gold Value')),
                ('billing_details', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='billing_backup.billingbackupdetails', verbose_name='Billing Details')),
                ('old_metal', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='masters.metal', verbose_name='Old Metal')),
                ('purity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='masters.purity', verbose_name='oldgold_purity')),
            ],
            options={
                'verbose_name': 'billing_backup_oldgold_detail',
                'verbose_name_plural': 'billing_backup_oldgold_details',
                'db_table': 'billing_backup_oldgold_detail',
            },
        ),
        migrations.CreateModel(
            name='BillingBackupDiamondDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diamond_pieces', models.IntegerField(blank=True, null=True, verbose_name='Diamond Pieces')),
                ('diamond_weight', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Diamond Weight')),
                ('diamond_rate', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Diamond Rate')),
                ('include_diamond_weight', models.BooleanField(default=True, verbose_name='Include Diamond Weight')),
                ('total_diamond_value', models.FloatField(blank=True, max_length=50, null=True, verbose_name='Total Diamond Value')),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing_backup.billingbackupdetails', verbose_name='Billing Details')),
                ('billing_item_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing_backup.billingbackuptagitems', verbose_name='Billing Item Details')),
                ('diamond_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='masters.stonedetails', verbose_name='Diamond Name')),
                ('diamond_rate_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.ratetype', verbose_name='Rate Type')),
                ('diamond_weight_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.stoneweighttype', verbose_name='Weight Type')),
            ],
            options={
                'verbose_name': 'billing_backup_diamond_detail',
                'verbose_name_plural': 'billing_backup_diamond_details',
                'db_table': 'billing_backup_diamond_detail',
            },
        ),
        migrations.CreateModel(
            name='BackupBillSilverNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backupbill_number', models.CharField(max_length=50, unique=True, verbose_name='Backup Bill Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'backup_bill_silver_number',
                'verbose_name_plural': 'backup_bill_silver_numbers',
                'db_table': 'backup_bill_silver_number',
            },
        ),
        migrations.CreateModel(
            name='BackupBillNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backupbill_number', models.CharField(max_length=50, unique=True, verbose_name='Backup Bill Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'backup_bill_number',
                'verbose_name_plural': 'backup_bill_numbers',
                'db_table': 'backup_bill_number',
            },
        ),
    ]
