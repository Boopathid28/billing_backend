# Generated by Django 4.2.4 on 2024-08-20 14:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tagging', '0001_initial'),
        ('organizations', '0001_initial'),
        ('settings', '0001_initial'),
        ('customer', '0001_initial'),
        ('accounts', '0001_initial'),
        ('billing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_issue_id', models.CharField(max_length=50, unique=True, verbose_name='Approval Issue ID')),
                ('issue_date', models.DateField(verbose_name='Issued Date')),
                ('issued_by', models.CharField(max_length=150, verbose_name='Issue By')),
                ('receiver_name', models.CharField(max_length=150, verbose_name='Receiver Name')),
                ('notes', models.TextField(blank='True', null=True, verbose_name='Notes')),
                ('issued_gross_weight', models.FloatField(default=0.0, max_length=100, verbose_name='Issued Gross Weight')),
                ('issued_net_weight', models.FloatField(default=0.0, max_length=100, verbose_name='Issued Net Weight')),
                ('recieved_date', models.DateField(blank=True, null=True, verbose_name='Received Date')),
                ('received_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Received By')),
                ('received_gross_weight', models.FloatField(default=0.0, max_length=150, verbose_name='Received Gross Weight')),
                ('received_net_weight', models.FloatField(default=0.0, max_length=150, verbose_name='Received Net Weight')),
                ('sold_gross_weight', models.FloatField(default=0.0, max_length=150, verbose_name='Sold Gross Weight')),
                ('sold_net_weight', models.FloatField(default=0.0, max_length=150, verbose_name='Sold Net Weight')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='Modified by')),
                ('bill_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='billing.billingtype', verbose_name='Bill Type')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.branch', verbose_name='Branch')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('estimation_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='billing.estimatedetails', verbose_name='Estimation Details')),
                ('shop_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customer.customer', verbose_name='Shop Name')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='settings.statustable', verbose_name='Approval Status')),
            ],
            options={
                'verbose_name': 'approval_issue',
                'verbose_name_plural': 'approval_issues',
                'db_table': 'approval_issue',
            },
        ),
        migrations.CreateModel(
            name='ApprovalIssueID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_issue_id', models.CharField(max_length=50, unique=True, verbose_name='Silver Bill Id')),
            ],
            options={
                'verbose_name': 'approval_issue_id',
                'verbose_name_plural': 'approval_issue_id',
                'db_table': 'approval_issue_id',
            },
        ),
        migrations.CreateModel(
            name='ReceivedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_date', models.DateField(blank=True, null=True, verbose_name='received_item_transfer date')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='received_item_Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='received_item_Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='received_item_Modified by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='received_item_Created by')),
            ],
            options={
                'verbose_name': 'received_item',
                'verbose_name_plural': 'received_items',
                'db_table': 'received_items',
            },
        ),
        migrations.CreateModel(
            name='ReturnItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_date', models.DateTimeField(verbose_name='return_Item_transfer date')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Returnreason')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='return_Item_Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='return_Item_Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='return_Item_Modified by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='return_Item_Created by')),
            ],
            options={
                'verbose_name': 'return_item',
                'verbose_name_plural': 'return_items',
                'db_table': 'return_items',
            },
        ),
        migrations.CreateModel(
            name='TransferItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_date', models.DateField(verbose_name='transfer date')),
                ('required_date', models.DateField(verbose_name='required date')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='transfer_Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='transfer_Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='transfer_Modified by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='transfer_Created by')),
                ('stock_authority', models.ForeignKey(db_column='stock_authority', on_delete=django.db.models.deletion.DO_NOTHING, related_name='stock_authority_staff', to='organizations.staff')),
                ('transfer_from', models.ForeignKey(db_column='transfer_from', on_delete=django.db.models.deletion.DO_NOTHING, related_name='transfer_from_branch', to='accounts.branch')),
            ],
            options={
                'verbose_name': 'transerfer_item',
                'verbose_name_plural': 'transerfer_items',
                'db_table': 'transerfer_items',
            },
        ),
        migrations.CreateModel(
            name='TransferType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=50, verbose_name='transfer_type_name')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='transfer_type_Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='transfer_type_Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='transfer_type_Modified by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='transfer_type_Created by')),
            ],
            options={
                'verbose_name': 'transfer_type',
                'verbose_name_plural': 'transfer_type',
                'db_table': 'transfer_type',
            },
        ),
        migrations.CreateModel(
            name='TransferStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=50, verbose_name='transfer_status_name')),
                ('status_comments', models.CharField(max_length=50, verbose_name='transfer_status_comments')),
                ('status_bgcolor', models.CharField(blank=True, max_length=255, null=True, verbose_name='transfer_bg_color')),
                ('status_color', models.CharField(blank=True, max_length=255, null=True, verbose_name='transfer_status_color')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='transferstatus_Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='transferstatus_Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='transferstatus_Modified by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='transferstatus_Created by')),
            ],
            options={
                'verbose_name': 'transferstatus',
                'verbose_name_plural': 'transferstatus',
                'db_table': 'transferstatus',
            },
        ),
        migrations.CreateModel(
            name='TransferItemDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(max_length=255, verbose_name='transfer_details_tag_number')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='transfer_details_Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='transfer_details_Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='transfer_details_Modified by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='transfer_details_Created by')),
                ('tagitems_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='transfer_details_tag_item_id', to='tagging.taggeditems')),
                ('transfer_itemid', models.ForeignKey(db_column='transfer_itemid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='transfer_details_transfer_id', to='stock.transferitem')),
            ],
            options={
                'verbose_name': 'transferitem_detail',
                'verbose_name_plural': 'transferitem_details',
                'db_table': 'transferitem_details',
            },
        ),
        migrations.AddField(
            model_name='transferitem',
            name='transfer_status',
            field=models.ForeignKey(db_column='transfer_status', on_delete=django.db.models.deletion.DO_NOTHING, related_name='transfer_item_status', to='stock.transferstatus'),
        ),
        migrations.AddField(
            model_name='transferitem',
            name='transfer_to',
            field=models.ForeignKey(db_column='transfer_to', on_delete=django.db.models.deletion.DO_NOTHING, related_name='transfer_to_branch', to='accounts.branch'),
        ),
        migrations.CreateModel(
            name='ReturnItemDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(max_length=255, verbose_name='returnItem_details_tag_number')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='returnItem_details_Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='returnItem_details_Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='returnItem_details_Modified by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='returnItem_details_Created by')),
                ('return_itemid', models.ForeignKey(db_column='return_itemid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='returnItem_details_recived_id', to='stock.returnitem')),
                ('tagitems_id', models.ForeignKey(db_column='tagitems_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='returnItem_details_tag_item_id', to='tagging.taggeditems')),
                ('transfer_itemid', models.ForeignKey(db_column='transfer_itemid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='returnItem_details_transfer_id', to='stock.transferitem')),
            ],
            options={
                'verbose_name': 'returnitem_detail',
                'verbose_name_plural': 'returnitem_details',
                'db_table': 'returnitem_details',
            },
        ),
        migrations.AddField(
            model_name='returnitem',
            name='transfer_itemid',
            field=models.ForeignKey(db_column='transfer_itemid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='return_Item_transfer_id', to='stock.transferitem'),
        ),
        migrations.AddField(
            model_name='returnitem',
            name='transfer_status',
            field=models.ForeignKey(db_column='transfer_status', on_delete=django.db.models.deletion.DO_NOTHING, related_name='return_transfer_item_status', to='stock.transferstatus'),
        ),
        migrations.CreateModel(
            name='ReceivedItemDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(max_length=255, verbose_name='received_item_details_tag_number')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='received_item_details_Created at')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='received_item_details_Modified at')),
                ('modified_by', models.IntegerField(blank=True, null=True, verbose_name='received_item_details_Modified by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='received_item_details_Created by')),
                ('received_itemid', models.ForeignKey(db_column='received_itemid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='received_item_details_recived_id', to='stock.receiveditem')),
                ('tagitems_id', models.ForeignKey(db_column='tagitems_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='received_item_details_tag_item_id', to='tagging.taggeditems')),
                ('transfer_itemid', models.ForeignKey(db_column='transfer_itemid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='received_item_details_transfer_id', to='stock.transferitem')),
            ],
            options={
                'verbose_name': 'receiveditem_detail',
                'verbose_name_plural': 'receiveditem_details',
                'db_table': 'receiveditem_details',
            },
        ),
        migrations.AddField(
            model_name='receiveditem',
            name='transfer_itemid',
            field=models.ForeignKey(blank=True, db_column='transfer_itemid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='received_item_transfer_id', to='stock.transferitem'),
        ),
        migrations.AddField(
            model_name='receiveditem',
            name='transfer_status',
            field=models.ForeignKey(db_column='transfer_status', on_delete=django.db.models.deletion.DO_NOTHING, related_name='reveive_transfer_item_status', to='stock.transferstatus'),
        ),
        migrations.CreateModel(
            name='ApprovalIssueTagItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_received', models.BooleanField(default=False, verbose_name='Received Status')),
                ('is_sold', models.BooleanField(default=False, verbose_name='Sales Status')),
                ('approval_issue_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.approvalissue', verbose_name='Approval Issue Details')),
                ('tag_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tagging.taggeditems', verbose_name='Tag Details')),
            ],
            options={
                'verbose_name': 'approval_issue_tag_item',
                'verbose_name_plural': 'approval_issue_tag_items',
                'db_table': 'approval_issue_tag_item',
            },
        ),
        migrations.CreateModel(
            name='ApprovalIssueNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_issue_number', models.CharField(max_length=50, unique=True, verbose_name='Approval Issue Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'approval_issue_number',
                'verbose_name_plural': 'approval_issue_numbers',
                'db_table': 'approval_issue_number',
            },
        ),
    ]
